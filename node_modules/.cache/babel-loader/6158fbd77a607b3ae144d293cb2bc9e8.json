{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n    setPaginatedTransactions(previousResponse => {\n      // if (response === null || previousResponse === null) {\n      //   return response\n      // }\n      console.log(\"Response.......\", response);\n\n      if (previousResponse === null) {\n        console.log(\"THis is the previous response\", previousResponse);\n        return response;\n      }\n\n      if (response === null) {\n        console.log(\"THis is the blank response\", previousResponse);\n        return previousResponse;\n      }\n\n      return {\n        data: [...previousResponse.data, ...response.data],\n        nextPage: response.nextPage\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"5C7xQHueO9nKLl+7c12EAAA+DoA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","response","page","nextPage","previousResponse","console","log","data","invalidateData"],"sources":["/Users/csuftitan/Downloads/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    )\n\n    \n    setPaginatedTransactions((previousResponse) => {\n      // if (response === null || previousResponse === null) {\n        //   return response\n        // }\n        console.log(\"Response.......\",response);\n        if (previousResponse === null) {\n          console.log(\"THis is the previous response\",previousResponse);\n          return response\n        }\n        if(response === null){\n        console.log(\"THis is the blank response\",previousResponse);\n        return previousResponse;\n      }\n\n      return { data: [...previousResponse.data,...response.data], nextPage: response.nextPage }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAIA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvC,MAAMS,QAAQ,GAAG,MAAML,cAAc,CACnC,uBADmC,EAEnC;MACEM,IAAI,EAAEJ,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACK;IADnE,CAFmC,CAArC;IAQAJ,wBAAwB,CAAEK,gBAAD,IAAsB;MAC7C;MACE;MACA;MACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BL,QAA9B;;MACA,IAAIG,gBAAgB,KAAK,IAAzB,EAA+B;QAC7BC,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4CF,gBAA5C;QACA,OAAOH,QAAP;MACD;;MACD,IAAGA,QAAQ,KAAK,IAAhB,EAAqB;QACrBI,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCF,gBAAzC;QACA,OAAOA,gBAAP;MACD;;MAED,OAAO;QAAEG,IAAI,EAAE,CAAC,GAAGH,gBAAgB,CAACG,IAArB,EAA0B,GAAGN,QAAQ,CAACM,IAAtC,CAAR;QAAqDJ,QAAQ,EAAEF,QAAQ,CAACE;MAAxE,CAAP;IACD,CAfuB,CAAxB;EAgBD,CAzB2B,EAyBzB,CAACP,cAAD,EAAiBE,qBAAjB,CAzByB,CAA5B;EA2BA,MAAMU,cAAc,GAAGhB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEQ,IAAI,EAAET,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDQ;EAAlD,CAAP;AACD;;GAtCeb,wB;UACsBD,c"},"metadata":{},"sourceType":"module"}